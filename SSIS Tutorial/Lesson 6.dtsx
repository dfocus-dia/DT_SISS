<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/21/2022 1:03:25 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-5VBE4DS"
  DTS:CreatorName="DESKTOP-5VBE4DS\kjmop"
  DTS:DTSID="{B871D8CC-BCF2-4F41-B068-8A04C51DA3AF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="1042"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="15"
  DTS:VersionGUID="{D4B9C56E-5D9E-427C-8DD0-E118D19510B0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{ACEF26EE-EDBE-418D-BF13-EEC3D2FDCDE6}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\kjmop\Downloads\Creating a Simple ETL Package\Creating a Simple ETL Package\Sample Data\ExportedExcelData.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost, 1433.AdventureWorksDW2012.SA 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DD63FAF7-2D19-424C-898B-2B4E50F7F2CE}"
      DTS:ObjectName="localhost, 1433.AdventureWorksDW2012.SA 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost, 1433;User ID=SA;Initial Catalog=AdventureWorksDW2012;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAgeeh8iWWMEm7PfJnpB9lGQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADtIf8dS7v653HDyRadjrKc+ZnyWhUGuU0okD26g62yKQAAAAAOgAAAAAIAACAAAAAK1Uc/MpNuX8Zh3146lscmj1bC3L//JugoSlxasCNdxyAAAACWBUIaUVJO1zAUwirGZJ5iZqRTwNxaI5EHDnIr5xj67kAAAAD3O+z/EEOGXqgzbXtN5GJySaC1U9UDIgw35mRqebI0mHraaluC/PiwHo0vikGU9PaxRE4QTt9sGA952H54VOq5</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost, 1433.AdventureWorksDW2012.SA 2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B007AEA8-7371-48B3-AEF1-B3E23C2C2EAB}"
      DTS:ObjectName="localhost, 1433.AdventureWorksDW2012.SA 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost, 1433;User ID=SA;Initial Catalog=AdventureWorksDW2012;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAgeeh8iWWMEm7PfJnpB9lGQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABmEmaEQsDAVZ8VYnZY7HB3yY5AlywY5NQ3TnZKSFaIewAAAAAOgAAAAAIAACAAAACgrPIp1vqnCjCkEk944UdDbAk03YfJbfajVVPBP1O9TCAAAAA4fv4tM9/5jRE/RBnut+97d66leTAzSA/+SUAMPFeJG0AAAADybHryL8Q7CGzKDTW/DIBeveRDfFBYnR41yn+EWg7SZjfAzv0lamrSUi1v7ocYTnsx1oFrw38MmoaHKhGQeOtl</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[txt File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F6AE9983-2AC8-4F15-8DA5-15FA7204DCE0}"
      DTS:ObjectName="txt File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\kjmop\Downloads\Creating a Simple ETL Package\Creating a Simple ETL Package\Sample Data\SampleCurrencyData.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="AverateRate"
              DTS:DTSID="{3645C5A0-200B-43D2-B9E4-AAC560C969F6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyID"
              DTS:DTSID="{4E9A4FEB-13AF-480C-9C7C-0C51266681A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyDate"
              DTS:DTSID="{FB0E6841-08C7-40DA-9509-6E6D032FAACF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="EndOfDayRate"
              DTS:DTSID="{27F86D6B-7CC0-4C85-A6D2-8CDA0D30CF5B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Extract Currency Data File to DB"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="데이터 흐름 태스크"
      DTS:DTSID="{FE41946C-B29F-4440-9406-8C075108B5F7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="1033"
      DTS:ObjectName="Extract Currency Data File to DB"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract Currency Data File to DB\Excel 원본"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel 원본;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All rights reserved; http://www.microsoft.com/sql/support;1"
              description="Excel 원본"
              name="Excel 원본"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="명령이 종료되기 전의 제한 시간 값(초)입니다. 값 0은 제한 시간이 없음을 나타냅니다."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="행 집합을 여는 데 사용되는 데이터베이스 개체의 이름을 지정합니다."
                  name="OpenRowset">Excel_대상</property>
                <property
                  dataType="System.String"
                  description="행 집합을 여는 데 사용되는 데이터베이스 개체의 이름이 들어 있는 변수를 지정합니다."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="실행할 SQL 명령입니다."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="실행할 SQL 명령이 들어 있는 변수입니다."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="데이터베이스에 액세스하는 데 사용되는 모드를 지정합니다."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="SQL 명령의 매개 변수에서 변수로의 매핑입니다."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract Currency Data File to DB\Excel 원본.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="데이터베이스에 액세스하는 데 사용되는 OLE DB 런타임 연결입니다."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력]"
                  name="Excel 원본 출력">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[CurrencyKey]"
                      dataType="wstr"
                      errorOrTruncationOperation="변환"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[CurrencyKey]"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[CurrencyKey]"
                      name="CurrencyKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[DateKey]"
                      dataType="wstr"
                      errorOrTruncationOperation="변환"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[DateKey]"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[AverageRate]"
                      dataType="r4"
                      errorOrTruncationOperation="변환"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[AverageRate]"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[AverageRate]"
                      name="AverageRate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[EndOfDayRate]"
                      dataType="wstr"
                      errorOrTruncationOperation="변환"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[EndOfDayRate]"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[EndOfDayRate]"
                      name="EndOfDayRate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[Date]"
                      dataType="wstr"
                      errorOrTruncationOperation="변환"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[Date]"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[CurrencyKey]"
                      dataType="wstr"
                      length="255"
                      name="CurrencyKey" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[DateKey]"
                      dataType="wstr"
                      length="255"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[AverageRate]"
                      dataType="wstr"
                      length="255"
                      name="AverageRate" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[EndOfDayRate]"
                      dataType="wstr"
                      length="255"
                      name="EndOfDayRate" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].ExternalColumns[Date]"
                      dataType="wstr"
                      length="255"
                      name="Date" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력]"
                  isErrorOut="true"
                  name="Excel 원본 오류 출력">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[CurrencyKey]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[CurrencyKey]"
                      name="CurrencyKey" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[DateKey]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[DateKey]"
                      name="DateKey" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[AverageRate]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[AverageRate]"
                      name="AverageRate" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[EndOfDayRate]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[EndOfDayRate]"
                      name="EndOfDayRate" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[Date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 오류 출력].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract Currency Data File to DB\OLE DB 대상"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB 대상;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All rights reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB 대상"
              name="OLE DB 대상"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="명령이 종료되기 전의 제한 시간 값(초)입니다. 값 0은 제한 시간이 없음을 나타냅니다."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="행 집합을 여는 데 사용되는 데이터베이스 개체의 이름을 지정합니다."
                  name="OpenRowset">[NewFactCurrencyRate]</property>
                <property
                  dataType="System.String"
                  description="행 집합을 여는 데 사용되는 데이터베이스 개체의 이름이 들어 있는 변수를 지정합니다."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="실행할 SQL 명령입니다."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="데이터 원본에서 코드 페이지 정보를 사용할 수 없을 때 사용할 열 코드 페이지를 지정합니다."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="문자 데이터를 설명할 때 DefaultCodePage 속성 값을 사용하도록 합니다."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="데이터베이스에 액세스하는 데 사용되는 모드를 지정합니다."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="ID 열에 제공된 값을 대상에 복사할지 여부를 나타냅니다. false인 경우 ID 열의 값이 대상에서 자동 생성됩니다. 빠른 로드를 사용하는 경우에만 적용됩니다."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Null 포함 열을 대상에 Null로 삽입할지 여부를 나타냅니다. false인 경우 Null 포함 열은 지정된 기본값으로 대상에 삽입됩니다. 빠른 로드를 사용하는 경우에만 적용됩니다."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="빠른 로드와 함께 사용할 옵션을 지정합니다. 빠른 로드를 사용하는 경우에만 적용됩니다."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="데이터 삽입 도중 커밋이 수행되는 시점을 지정합니다. 값을 0으로 지정하면 데이터 삽입 완료 시에 커밋이 한 번 수행됩니다. 빠른 로드를 사용하는 경우에만 적용됩니다."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract Currency Data File to DB\OLE DB 대상.Connections[OleDbConnection]"
                  connectionManagerID="{175F9DD7-2733-42C1-B23A-C0497511531A}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost, 1433.AdventureWorksDW2012.SA]"
                  description="데이터베이스에 액세스하는 데 사용되는 OLE DB 런타임 연결입니다."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력]"
                  errorOrTruncationOperation="삽입"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB 대상 입력">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].Columns[CurrencyKey]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CurrencyKey"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[CurrencyKey]"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[CurrencyKey]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].Columns[DateKey]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[DateKey]"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[DateKey]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].Columns[AverageRate]"
                      cachedDataType="r4"
                      cachedName="AverageRate"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[AverageRate]"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[AverageRate]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].Columns[EndOfDayRate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EndOfDayRate"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[EndOfDayRate]"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[EndOfDayRate]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].Columns[Date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Date"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[Date]"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[Date]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].Columns[Percent]"
                      cachedDataType="r4"
                      cachedName="Percent"
                      externalMetadataColumnId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[Percent]"
                      lineageId="Package\Extract Currency Data File to DB\Script Component.Outputs[Output 0].Columns[Percent]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[CurrencyKey]"
                      dataType="wstr"
                      length="255"
                      name="CurrencyKey" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[DateKey]"
                      dataType="wstr"
                      length="255"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[AverageRate]"
                      dataType="r4"
                      name="AverageRate" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[EndOfDayRate]"
                      dataType="wstr"
                      length="255"
                      name="EndOfDayRate" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[Date]"
                      dataType="wstr"
                      length="255"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력].ExternalColumns[Percent]"
                      dataType="r4"
                      name="Percent" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract Currency Data File to DB\OLE DB 대상.Outputs[OLE DB 대상 오류 출력]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB 대상 오류 출력"
                  synchronousInputId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Outputs[OLE DB 대상 오류 출력].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract Currency Data File to DB\OLE DB 대상.Outputs[OLE DB 대상 오류 출력].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\OLE DB 대상.Outputs[OLE DB 대상 오류 출력].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract Currency Data File to DB\OLE DB 대상.Outputs[OLE DB 대상 오류 출력].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract Currency Data File to DB\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        Row.Percent = Row.AverageRate * 100;
        Row.AverageRate = Row.AverageRate - (float)0.2;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CurrencyKey
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool CurrencyKey_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DateKey
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool DateKey_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Single AverageRate
    {
        get
        {
            return Buffer.GetSingle(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool AverageRate_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EndOfDayRate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool EndOfDayRate_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Single Percent
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Percent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c3301e1ccde4d8984f095e10fac22bc.Properties.Settings.get_Default():SC_4c3301e1ccde4d8984f095e10fac22bc.Properties.Sett" +
    "ings")]

namespace SC_4c3301e1ccde4d8984f095e10fac22bc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4c3301e1ccde4d8984f095e10fac22bc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{967c2875-2baa-450e-a15c-c79bc604d22e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4c3301e1ccde4d8984f095e10fac22bc</RootNamespace>
    <AssemblyName>SC_4c3301e1ccde4d8984f095e10fac22bc</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_4c3301e1ccde4d8984f095e10fac22bc" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4c3301e1ccde4d8984f095e10fac22bc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4c3301e1ccde4d8984f095e10fac22bc</msb:DisplayName>
    <msb:ProjectId>{DE691C88-7079-4132-BFC4-9C52C3909FF0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4c3301e1ccde4d8984f095e10fac22bc.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4c3301e1ccde4d8984f095e10fac22bc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4c3301e1ccde4d8984f095e10fac22bc")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c3301e1ccde4d8984f095e10fac22bc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c3301e1ccde4d8984f095e10fac22bc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c3301e1ccde4d8984f095e10fac22bc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4c3301e1ccde4d8984f095e10fac22bc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4c3301e1ccde4d8984f095e10fac22bc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4c3301e1ccde4d8984f095e10fac22bc.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANNhOWIAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAJjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
NAAAAAAAAEgAAAACAAUAZCIAALgQAAABAAAAAAAAABwzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqWAwNvCgAABiIAAMhCWm8SAAAG
AwNvCgAABiLNzEw+WW8LAAAGKh4CKBYAAAYqKgIDBAUoEgAACipSAnsTAAAKAnsUAAAKFpRvFQAA
CioiAhYoFgAACipSAnsTAAAKAnsUAAAKF5RvFQAACioiAhcoFgAACipSAnsTAAAKAnsUAAAKGJRv
FwAACio6AhgDjBoAAAEoGAAACioiAhgoFgAACipaAywIAhgoGQAACipyAQAAcHMaAAAKelICexMA
AAoCexQAAAoZlG8VAAAKKiICGSgWAAAKKlICexMAAAoCexQAAAoalG8VAAAKKiICGigWAAAKKjoC
GwOMGgAAASgYAAAKKloDLAgCGygZAAAKKnIBAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0A
AAoCAnMaAAAGfQEAAAQCAnMbAAAGfQIAAAQqkgRyngAAcBpvHgAACiwVAgUCAygfAAAKDgRzBQAA
Bm8YAAAGKkorBwIDbxkAAAYDbxQAAAYt8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAE
Kh4CKCAAAAoqrn4FAAAELR5yrgAAcNAHAAACKCEAAApvIgAACnMjAAAKgAUAAAR+BQAABCoafgYA
AAQqHgKABgAABCoafgcAAAQqHgIoJAAACioucyEAAAaABwAABCoAAABCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAAB0BgAAI34AAOAGAAD0BgAAI1N0cmluZ3MAAAAA1A0AACABAAAj
VVMA9A4AABAAAAAjR1VJRAAAAAQPAAC0AQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAW
AAABAAAAIAAAAAgAAAAHAAAAIgAAABEAAAAkAAAAEAAAAAMAAAAPAAAAEgAAAAEAAAAEAAAAAQAA
AAAAMQMBAAAAAAAGACgCAwUGALwCAwUGAHQB8AQPAHcFAAAGAKEBRQQGAAsCRQQGAOwBRQQGAKMC
RQQGAEgCRQQGAGECRQQGALgBRQQGANMB9wIKAHwChwAKAMIEhwAOALMEhwAKAI4EhwAKAEkGhwAG
AAAG/QMGAFcB8AQGANMEIwUGAIIEMAQSACcBGwMSAIgBGwMSANUAGwQGADwBAwUGAHYA/QMGAFcE
/QMGABQD/QMGAHEE/QMGAKgA/QMGAE8A/QMGAOoGRQQAAAAAAQAAAAAAAQABAAEAEAAQBAAAEAAB
AAEAAQAQAKYEAAA5AAEABQABABAAKwYAAEUAAQAWAAEAEAD0BQAASQADABoAAQAQALUFAABJAAQA
GwAAABAAKgWGBUkABQAcAAABEADkBYYFYQAHACAABgD0BXoABgC1BX4AAQA5BoIAAQA5BoIAEQAE
BIYAEQDFAIoAEQA/AI4AUCAAAAAAxgDaAgYAAQBYIAAAAADGAOUCBgABAGAgAAAAAMYAqwaSAAEA
hiAAAAAAhhjjBAYAAgCOIAAAAACGGOMEGwACAJkgAAAAAIYI1gaYAAUAriAAAAAAhgjVA0IABQC3
IAAAAACGCMoGmAAFAMwgAAAAAIYIwgNCAAUA1SAAAAAAhgj2AJwABQDqIAAAAACGCAYBoAAFAPkg
AAAAAIYIaQNCAAYAAiEAAAAAhgiAA6UABgAZIQAAAACGCBYBmAAHAC4hAAAAAIYIlwNCAAcANyEA
AAAAhgjtAJgABwBMIQAAAACGCFkDQgAHAFUhAAAAAIYIHwagAAcAZCEAAAAAhgivA6UACAB7IQAA
AACGAMIGQgAJAIMhAAAAAIYABwZCAAkAiyEAAAAAhhjjBAYACQCrIQAAAADGAJ4GqgAJANAhAAAA
AMYBlwaSAA0A4yEAAAAAxgGrBpIADgDlIQAAAACGGOMEtAAPAPQhAAAAAIYY4wS0ABAAAyIAAAAA
gxjjBAYAEQALIgAAAACTCM8EugARADciAAAAAJMIrQC/ABEAPiIAAAAAkwi5AMQAEQBGIgAAAACW
CBMGygASAE0iAAAAAIYY4wQGABIAVSIAAAAAkRjpBM8AEgAAAAEAxgYAAAEAyAQAAAIAvwUAAAMA
nAQAAAEA8QIAAAEA8QIAAAEA8QIAAAEA8QIAAAEACgAAAAIAfQAAAAMAyAQAAAQAnAQAAAEAyAQA
AAEAxgYAAAEATwYAAAEATwYAAAEA8QIJAOMEAQARAOMEBgAZAOMECgApAOMEEAAxAOMEEAA5AOME
EABBAOMEEABJAOMEEABRAOMEEABZAOMEEABhAOMEEABpAOMEBgCZAOMEBgC5AOMEFQDJAOMEBgCJ
ANoCBgCJAOUCBgBxAOMEGwBxAMgEJQBxAL8FKQB5ABEDLQBxAOUDMgB5AHMANwBxAPQDPABxAOwD
AQDZAOMEEABxAMIGQgBxAAcGQgCJAOMEBgDhAO0FRgCJANMFTQCRAOMEBgDxAGEAUwDxAOYGWgCh
AOMEYADBAOMEBgAuAAsA7gAuABMA9wAuABsAFgEuACMAHwEuACsASAEuADMASAEuADsASAEuAEMA
HwEuAEsATgEuAFMASAEuAFsAZQFDAGMArwHhAHsArwHjAGsArwGpAXMAFgHJAXMAFgEDAAEABwAN
AAgADwAAANoG0wAAANkD1wAAAM4G0wAAAMYD1wAAAAoB2wAAAIQD1wAAABoB0wAAAJsD1wAAAPEA
0wAAAF0D1wAAACMG2wAAALMD1wAAANME3wAAAM0A5AAAABcG6QACAAYAAwACAAcABQACAAgABwAC
AAkACQACAAoACwABAAsACwACAAwADQABAA0ADQACAA4ADwACAA8AEQACABAAEwACABEAFQABABIA
FwABABMAGQACAB0AGwACAB4AHQABAB8AHQACACAAHwAEgAAAAQAAAAAAAAAAAAAAAAAbAAAABAAA
AAAAAAAAAAAAaAASAAAAAAAPAAAAAAAAAAAAAABxAFkGAAAAAA8AAAAAAAAAAAAAAHEAdgYAAAAA
BAAAAAAAAAAAAAAAaAD9AwAAAAAAAAAAAQAAADQFAAAAAAA8TW9kdWxlPgBJbnB1dElEAG1zY29y
bGliAFNDXzRjMzMwMWUxY2NkZTRkODk4NGYwOTVlMTBmYWMyMmJjAGRlZmF1bHRJbnN0YW5jZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRTaW5nbGUASW5wdXROYW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAGdldF9EYXRlAGdldF9B
dmVyYWdlUmF0ZQBzZXRfQXZlcmFnZVJhdGUAZ2V0X0VuZE9mRGF5UmF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ180
YzMzMDFlMWNjZGU0ZDg5ODRmMDk1ZTEwZmFjMjJiYy5kbGwAZ2V0X0RhdGVfSXNOdWxsAGdldF9B
dmVyYWdlUmF0ZV9Jc051bGwAc2V0X0F2ZXJhZ2VSYXRlX0lzTnVsbABnZXRfRW5kT2ZEYXlSYXRl
X0lzTnVsbABzZXRfUGVyY2VudF9Jc051bGwAZ2V0X0RhdGVLZXlfSXNOdWxsAGdldF9DdXJyZW5j
eUtleV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
XzRjMzMwMWUxY2NkZTRkODk4NGYwOTVlMTBmYWMyMmJjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ180YzMzMDFlMWNjZGU0ZDg5ODRmMDk1ZTEwZmFjMjJi
Yy5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABzZXRfUGVyY2VudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21w
b25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4
dFJvdwBnZXRfRGF0ZUtleQBnZXRfQ3VycmVuY3lLZXkAZ2V0X0Fzc2VtYmx5AAAAgJtJAHMATgB1
AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8A
IABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABl
ACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8A
NABjADMAMwAwADEAZQAxAGMAYwBkAGUANABkADgAOQA4ADQAZgAwADkANQBlADEAMABmAGEAYwAy
ADIAYgBjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAf4Z17HKUK
QYw2aMdGNZAXAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSADARI9HQgSQQMGEj0DBh0IBCAB
DggEIAECCAQgAQwIBSACAQgcAyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEI
t3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAOAyAADAQg
AQEMBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAAC
AygADAQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU0NfNGMzMzAxZTFjY2RlNGQ4OTg0ZjA5NWUxMGZhYzIyYmMAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AAD8MwAAAAAAAAAAAAAWNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDQAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADQAYwAzADMAMAAxAGUAMQBjAGMAZABlADQAZAA4ADkAOAA0AGYAMAA5ADUAZQAxADAA
ZgBhAGMAMgAyAGIAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANABjADMAMwAwADEA
ZQAxAGMAYwBkAGUANABkADgAOQA4ADQAZgAwADkANQBlADEAMABmAGEAYwAyADIAYgBjAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0AGMA
MwAzADAAMQBlADEAYwBjAGQAZQA0AGQAOAA5ADgANABmADAAOQA1AGUAMQAwAGYAYQBjADIAMgBi
AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANABjADMA
MwAwADEAZQAxAGMAYwBkAGUANABkADgAOQA4ADQAZgAwADkANQBlADEAMABmAGEAYwAyADIAYgBj
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAoNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4c3301e1ccde4d8984f095e10fac22bc</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">06</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0].Columns[CurrencyKey]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CurrencyKey"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[CurrencyKey]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0].Columns[DateKey]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="DateKey"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[DateKey]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0].Columns[AverageRate]"
                      cachedDataType="r4"
                      cachedName="AverageRate"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[AverageRate]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0].Columns[EndOfDayRate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EndOfDayRate"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[EndOfDayRate]" />
                    <inputColumn
                      refId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0].Columns[Date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Date"
                      lineageId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력].Columns[Date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract Currency Data File to DB\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Currency Data File to DB\Script Component.Outputs[Output 0].Columns[Percent]"
                      dataType="r4"
                      lineageId="Package\Extract Currency Data File to DB\Script Component.Outputs[Output 0].Columns[Percent]"
                      name="Percent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract Currency Data File to DB.Paths[Excel 원본 출력]"
              endId="Package\Extract Currency Data File to DB\Script Component.Inputs[Input 0]"
              name="Excel 원본 출력"
              startId="Package\Extract Currency Data File to DB\Excel 원본.Outputs[Excel 원본 출력]" />
            <path
              refId="Package\Extract Currency Data File to DB.Paths[Output 0]"
              endId="Package\Extract Currency Data File to DB\OLE DB 대상.Inputs[OLE DB 대상 입력]"
              name="Output 0"
              startId="Package\Extract Currency Data File to DB\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="260.8,41.6"
          Id="Package\Extract Currency Data File to DB"
          TopLeft="95.6249985750765,64.9999982780881" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Extract Currency Data File to DB">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,41.6"
          Id="Package\Extract Currency Data File to DB\Excel 원본"
          TopLeft="433.124993545935,80.8888867460652" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Extract Currency Data File to DB\Script Component"
          TopLeft="419.374993750826,154.555551461232" />
        <EdgeLayout
          Id="Package\Extract Currency Data File to DB.Paths[Excel 원본 출력]"
          TopLeft="501.124993545935,122.488886746065">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.25000020489068,32.0666647151665"
              Start="0,0"
              End="8.25000020489068,24.5666647151665">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.0333323575832" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.0333323575832"
                    Point2="0,16.0333323575832"
                    Point3="4,16.0333323575832" />
                  <mssgle:LineSegment
                    End="4.25000020489068,16.0333323575832" />
                  <mssgle:CubicBezierSegment
                    Point1="4.25000020489068,16.0333323575832"
                    Point2="8.25000020489068,16.0333323575832"
                    Point3="8.25000020489068,20.0333323575832" />
                  <mssgle:LineSegment
                    End="8.25000020489068,24.5666647151665" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Extract Currency Data File to DB\OLE DB 대상"
          TopLeft="416.874993788079,236.888882613477" />
        <EdgeLayout
          Id="Package\Extract Currency Data File to DB.Paths[Output 0]"
          TopLeft="509.374993750826,196.155551461232">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17.2999999627472,40.7333311522449"
              Start="0,0"
              End="-17.2999999627472,33.2333311522449">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3666655761225" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3666655761225"
                    Point2="0,20.3666655761225"
                    Point3="-4,20.3666655761225" />
                  <mssgle:LineSegment
                    End="-13.2999999627472,20.3666655761225" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.2999999627472,20.3666655761225"
                    Point2="-17.2999999627472,20.3666655761225"
                    Point3="-17.2999999627472,24.3666655761225" />
                  <mssgle:LineSegment
                    End="-17.2999999627472,33.2333311522449" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract Currency Data File to DB\Excel 원본">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract Currency Data File to DB\OLE DB 대상">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>